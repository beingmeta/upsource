# -*- Mode: shell-script; -*-
MOUNT=$1
SOURCE=$2
BRANCH=${BRANCH:-master}
export UPSOURCE_TRACE=${UPSOURCE_TRACE}
export GIT_USER=${GIT_USER:-git}
export GIT_HTTP_LOGIN=${GIT_HTTP_LOGIN:-${GIT_LOGIN}}
export GIT_SSH_USER=${GIT_SSH_USER:-${SSH_USER}}
export GIT_SSH_KEY=${GIT_SSH_KEY:-${SSH_KEY}}
GIT="git ${GITFLAGS}"

insert_login() {
    local url=$1;
    local login=$2;
    local partial=${url##https://};
    if [ -z "${login}" ]; then
        echo $url;
    else
        echo "https://${login}@${partial}";
    fi;
}

if (test ! -z "${GIT_SSH_USER}") || (test ! -z "${GIT_SSH_KEY}"); then
    export GIT_SSH_COMMAND;
    if test -z "${GIT_SSH_COMMAND}"; then
	GIT_SSH_COMMAND="ssh -q -o \"StrictHostKeyChecking no\" "; fi
    if test ! -z "${SSH_USER}"; then
	GIT_SSH_COMMAND="${GIT_SSH_COMMAND} -l ${SSH_USER}"; fi
    if test ! -z "${SSH_KEY}"; then
	GIT_SSH_COMMAND="${GIT_SSH_COMMAND} -i ${SSH_KEY}"; fi
fi;

if [ "${SOURCE#https://}" != "${SOURCE}" ] && [ -n "${GIT_HTTP_LOGIN}" ]; then
    SOURCE=$(insert_login "${SOURCE}" "${GIT_HTTP_LOGIN}");
fi;

if test ! -d ${MOUNT}; then
   mkdir -p ${MOUNT};
fi;
if [ -n "${UPSOURCE_OWNER}" ]; then chown "${UPSOURCE_OWNER}" "${MOUNT}"; fi
if [ -n "${UPSOURCE_GROUP}" ]; then chgrp "${UPSOURCE_GROUP}" "${MOUNT}"; fi
if [ -n "${UPSOURCE_FILEMODE}" ]; then chmod "${UPSOURCE_FILEMODE}" "${MOUNT}"; fi

if test -x ${UPSOURCE_LIB}/handlers/pre.cmd; then
  ${UPSOURCE_LIB}/handlers/pre.cmd;
fi;
if test -f ${UPSOURCE_LIB}/handlers/pre.sh; then
  . ${UPSOURCE_LIB}/handlers/pre.sh;
fi;
if test -x ${UPSOURCE_LIB}/handlers/pre.git.cmd; then
  ${UPSOURCE_LIB}/handlers/pre.git.cmd;
fi;
if test -f ${UPSOURCE_LIB}/handlers/pre.git.sh; then
  . ${UPSOURCE_LIB}/handlers/pre.git.sh;
fi;

if test ! -z "${UPSOURCE_TRACE}"; then
   echo "# (upsource) mount=${MOUNT} source=${SOURCE}" >&2;
   echo "# (upsource) " "owner=${OWNER} group=${GROUP}" \
   	"mode=${FILEMODE}" >&2;
   echo "# (upsource) sshcmd=${GIT_SSH_COMMAND}" >&2;
fi
if test -d ${MOUNT}/.git; then
   cd ${MOUNT}; ${GIT} checkout ${BRANCH}; ${GIT} pull
else
   ${GIT} clone -b ${BRANCH} ${SOURCE} ${MOUNT};
fi;

if test -x ${UPSOURCE_LIB}/handlers/post.git.cmd; then
  ${UPSOURCE_LIB}/handlers/post.git.cmd;
fi;
if test -f ${UPSOURCE_LIB}/handlers/post.git.sh; then
  . ${UPSOURCE_LIB}/handlers/post.git.sh;
fi;
if test -x ${UPSOURCE_LIB}/handlers/post.cmd; then
  ${UPSOURCE_LIB}/handlers/post.cmd;
fi;
if test -f ${UPSOURCE_LIB}/handlers/post.sh; then
  . ${UPSOURCE_LIB}/handlers/post.sh;
fi;
